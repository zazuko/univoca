PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX sh: <http://www.w3.org/ns/shacl#>
PREFIX schema: <http://schema.org/>
PREFIX dcterms: <http://purl.org/dc/terms/>
prefix hydra: <http://www.w3.org/ns/hydra/core#>
prefix code: <https://code.described.at/>
prefix knossos: <https://hypermedia.app/knossos#>
prefix univoca: <https://described.at/univoca/>
prefix hex: <https://w3id.org/hydra/extension#>
prefix query: <https://hypermedia.app/query#>

<>
  a hydra:ApiDocumentation ;
  hydra:entrypoint <../> ;
.

univoca:HierarchyCollection
  a hydra:Class ;
  hydra:apiDocumentation <> ;
  knossos:memberTemplate
    [
      hydra:template "/hierarchy/{name}" ;
      hydra:mapping
        [
          hydra:variable "name" ;
          hydra:property schema:name ;
          hydra:required true ;
          knossos:transformVariable
            [
              a code:EcmaScriptModule ;
              code:link <file:apps/api/lib/Hierarchy.js#slugifyName> ;
            ] ;
        ] ;
    ] ;
  hydra:supportedOperation
    [
      a schema:CreateAction ;
      hydra:method "POST" ;
      hydra:title "Create hierarchy" ;
      hydra:expects </api/univoca/Hierarchy> ;
      code:implementedBy
        [
          a code:EcmaScriptModule ;
          code:link <node:@hydrofoil/knossos/collection.js#CreateMember> ;
        ] ;
    ] ;
.


univoca:TermSetCollection
  a hydra:Class ;
  hydra:apiDocumentation <> ;
  knossos:preprocessResponse
    [
      a code:EcmaScriptModule ;
      code:link <file:apps/api/lib/SharedDimension.js#injectTermsLink> ;
    ] ;
  knossos:preprocessPayload
    [
      a code:EcmaScriptModule ;
      code:link <file:apps/api/lib/SharedDimension.js#prepareCreated> ;
    ] ;
  knossos:memberTemplate
    [
      hydra:template "/dimension/{identifier}" ;
      hydra:mapping
        [
          hydra:variable "identifier" ;
          hydra:property dcterms:identifier ;
          hydra:required true ;
        ] ;
    ] ;
  hydra:supportedOperation
    [
      a hydra:supportedOperation, schema:CreateAction ;
      hydra:method "POST" ;
      hydra:title "Create dimension" ;
      hydra:expects </api/univoca/NewOrImportedDimension> ;
      code:implementedBy
        [
          a code:EcmaScriptModule ;
          code:link <file:apps/api/handlers/dimensions.js#post> ;
        ] ;
      hex:multiPartPath </api#export> ;
    ] ;
.
sh:NodeShape
  a hydra:Class ;
  hydra:apiDocumentation <> ;
  query:include
    [
      query:path
        (
        # ((sh:and|sh:xone|sh:or)/rdf:rest*)/rdf:first/(sh:property/(sh:group|sh:node))?
          [ sh:alternativePath ( sh:and sh:xone sh:or ) ]
          [ sh:zeroOrMorePath rdf:rest ]
          rdf:first
          [ sh:zeroOrOnePath ( sh:property [ sh:alternativePath ( sh:group sh:node ) ] ) ]
        ),
        (
        # (((sh:and|sh:xone|sh:or)/rdf:rest*)/rdf:first)?/(sh:property/(sh:group|sh:node))?
          [
            sh:zeroOrOnePath
              (
                [ sh:alternativePath ( sh:and sh:xone sh:or ) ]
                [ sh:zeroOrMorePath rdf:rest ]
                rdf:first
              )
          ]
          [ sh:zeroOrOnePath ( sh:property [ sh:alternativePath ( sh:group sh:node ) ] ) ]
        )
    ] .
